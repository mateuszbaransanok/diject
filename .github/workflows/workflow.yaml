name: CI Pipeline

on:
  pull_request:
    branches: [ "**" ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      bump:
        description: "Create release"
        required: true
        default: minor
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NAME: [ black, isort, flake, mypy ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install --quiet tox
      - name: Run ${{ matrix.NAME }}
        run: tox -e ${{ matrix.NAME }}

  unittests:
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install --quiet tox
      - name: Run unittests
        run: tox -e unittests

  release_candidate:
    runs-on: ubuntu-latest
    needs: [ static_analysis, unittests ]
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Configure Git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Install bump2version
        run: |
          git checkout -B release/candidate
          pip install bump2version
      - name: Bump version
        run: bump2version ${{ github.event.inputs.bump }}
      - name: Push changes and create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=v$(grep "current_version = " .bumpversion.cfg  | sed -e "s/^current_version = //")
          BRANCH="release/$TAG"
          echo "$BRANCH"
          echo "${{ github.ref_name }}"
          git checkout -B "$BRANCH"
          git push origin "$BRANCH"
          gh pr create \
            --title "Release $TAG" \
            --body "Release $TAG" \
            --base "${{ github.ref_name }}" \
            --head "$BRANCH" \
            --assignee "${{ github.actor }}"

  release:
    runs-on: ubuntu-latest
    needs: [ static_analysis, unittests ]
    if: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')) && startsWith(github.event.head_commit.message, 'Release ') }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Get tag
        id: get_tag
        run: |
          TAG=v$(grep "current_version = " .bumpversion.cfg | sed -e "s/^current_version = //")
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "${{ env.TAG }}" \
          --title "${{ env.TAG }}" \
          --generate-notes \
          --target "${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [ static_analysis, unittests, release ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: python -m pip install --upgrade pip build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.11.0
